<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>

   <parent>
      <artifactId>CCCRest-ear</artifactId>
      <groupId>uk.ac.ncl.tests</groupId>
      <version>7.1.1-SNAPSHOT</version>
   </parent>

   <artifactId>CCCRest-ear-ear</artifactId>
   <packaging>ear</packaging>

   <name>CCCRest EAR: EAR Module</name>

   <url>http://jboss.org/jbossas</url>
   <licenses>
      <license>
         <name>Apache License, Version 2.0</name>
         <distribution>repo</distribution>
         <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
      </license>
   </licenses>

   <dependencies>

      <!-- Depend on the ejb module and war so that we can package them -->

       <!--   <dependency>
         <groupId>uk.ac.ncl.tests</groupId>
         <artifactId>CCCRest-ear-commons</artifactId>
         <type>jar</type>
      </dependency> -->
      <dependency>
         <groupId>uk.ac.ncl.tests</groupId>
         <artifactId>CCCRest-ear-web</artifactId>
         <type>war</type>
      </dependency>
      <dependency>
         <groupId>uk.ac.ncl.tests</groupId>
         <artifactId>CCCRest-ear-commons</artifactId>
         <type>jar</type>
      </dependency>
      <dependency>
         <groupId>uk.ac.ncl.tests</groupId>
         <artifactId>CCCRest-ear-ejb</artifactId>
         <type>ejb</type>
      </dependency>

   </dependencies>

   <build>
      <finalName>CCCRest-ear</finalName>
      <plugins>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-ear-plugin</artifactId>
            <version>2.6</version>
            <configuration>
               <!-- Tell Maven we are using Java EE 6 -->
               <version>6</version>
               <!-- Use Java EE ear libraries as needed. Java EE ear libraries
                  are in easy way to package any libraries needed in the ear, and automatically
                  have any modules (EJB-JARs and WARs) use them -->
               <defaultLibBundleDir>lib</defaultLibBundleDir>
               <modules>
               </modules>
            </configuration>
         </plugin>
         <!-- The JBoss AS plugin deploys your ear to a local JBoss AS container -->
         <!-- Due to Maven's lack of intelligence with EARs we need to configure
            the jboss-as maven plugin to skip deployment for all modules. We then enable
            it specifically in the ear module. -->
         <plugin>
            <groupId>org.jboss.as.plugins</groupId>
            <artifactId>jboss-as-maven-plugin</artifactId>
            <configuration>
               <skip>false</skip>
            </configuration>
         </plugin>
      </plugins>
      <pluginManagement>
      	<plugins>
      		<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
      		<plugin>
      			<groupId>org.eclipse.m2e</groupId>
      			<artifactId>lifecycle-mapping</artifactId>
      			<version>1.0.0</version>
      			<configuration>
      				<lifecycleMappingMetadata>
      					<pluginExecutions>
      						<pluginExecution>
      							<pluginExecutionFilter>
      								<groupId>
      									org.apache.maven.plugins
      								</groupId>
      								<artifactId>
      									maven-ear-plugin
      								</artifactId>
      								<versionRange>
      									[2.6,)
      								</versionRange>
      								<goals>
      									<goal>
      										generate-application-xml
      									</goal>
      								</goals>
      							</pluginExecutionFilter>
      							<action>
      								<ignore></ignore>
      							</action>
      						</pluginExecution>
      					</pluginExecutions>
      				</lifecycleMappingMetadata>
      			</configuration>
      		</plugin>
      	</plugins>
      </pluginManagement>
   </build>



</project>
